tryCathc(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(e)
})
tryCatch(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(e)
})
#
tryCatch(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(e)
print(21:30)
})
print(31:40)
#
tryCatch(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(21:30)
})
print(31:40)
print(1:10)
print(x)
print(31:40)
#
tryCatch(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(21:30)
})
capture.output(
tryCatch(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(21:30)
})
)
cap=capture.output(
tryCatch(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(21:30)
})
)
cap
cap=captureOutput(
tryCatch(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(21:30)
})
)
list.of.packages <- c("MASS", "gplots", "compiler", "scatterplot3d", "R.utils")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
if(!'multtest'%in% installed.packages()[,"Package"]){
library(R.utils)
cap=captureOutput(
tryCatch(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(21:30)
})
)
cap#
cap=captureOutput(
tryCatch(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(21:30)
}),type = c("output", "message")
)
cap
cap=capture.output(
tryCatch(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(21:30)
}),type = c("output", "message")
)
cap
#
# myGAPIT = capture.output(
#   tryCatch(
#     {GAPI
cap=capture.output(
tryCatch(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(21:30)
}),type = c("output", "message")
)
cap
cap=capture.output(
tryCatch(
{print(1:10);print(x);print(11:20)}
, error=function(e){
print(e)
print(21:30)
}),type = c("output", "message")
)
cap
stdout <- vector('character')
con    <- textConnection('stdout', 'wr', local = TRUE)
sink(con)
1:10
sink()
close(con)
stdout
con
1:10
stdout <- vector('character')
con    <- textConnection('stdout', 'wr', local = TRUE)
sink(con)
1:10
sink()
close(con)
stdout
evals
install.packages('evals')
install.packages('evaluate')
library(evaluate)
evals('1:10')
eval('1:10')
cap=capture.output(
tryCatch(
{eval(1:10);print(x);print(11:20)}
, error=function(e){
print(e)
print(21:30)
}),type = c("output", "message")
)
