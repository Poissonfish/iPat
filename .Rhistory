plot(seq(0,2,.01), norm.seq, type="l",xlim=c(0,4))
theta=2
norm.seq=dnorm(seq(0,2,.01),theta,2)
plot(seq(0,2,.01), norm.seq, type="l",xlim=c(0,4))
theta=1
norm.seq=dnorm(seq(0,4,.01),theta,2)
plot(seq(0,2,.01), norm.seq, type="l",xlim=c(0,4))
theta=1
norm.seq=dnorm(seq(0,4,.01),theta,2)
plot(seq(0,4,.01), norm.seq, type="l",xlim=c(0,4))
theta=1
norm.seq=dnorm(seq(-4,4,.01),theta,2)
plot(seq(-4,4,.01), norm.seq, type="l",xlim=c(0,4))
theta=1
norm.seq=dnorm(seq(-4,4,.01),theta,2)
plot(seq(-4,4,.01), norm.seq, type="l",xlim=c(0,4))
theta=1
norm.seq=dnorm(seq(-4,4,.01),theta,2)
plot(seq(-4,4,.01), norm.seq, type="l",xlim=c(-4,4))
theta=1
theta=1
norm.seq=dnorm(seq(-10,10,.01),theta,2)
plot(seq(-10,10,.01), norm.seq, type="l",xlim=c(-10,10))
theta=1
norm.seq=dnorm(seq(-10,10,.01),theta,2)
plot(seq(-10,10,.01), norm.seq, type="l",xlim=c(-10,10))
theta=2
norm.seq=dnorm(seq(-10,10,.01),theta,2)
plot(seq(-10,10,.01), norm.seq, type="l",xlim=c(-10,10))
theta=1
norm.seq=dnorm(seq(-10,10,.01),theta,2)
plot(seq(-10,10,.01), norm.seq, type="l",xlim=c(-10,10))
theta=1
norm.seq=dnorm(seq(-9,11,.01),theta,2)
plot(seq(-9,11,.01), norm.seq, type="l",xlim=c(-9,11))
theta=2
norm.seq=dnorm(seq(-9,11,.01),theta,2)
plot(seq(-9,11,.01), norm.seq, type="l",xlim=c(-9,11))
norm.seq1=dnorm(seq(-9,11,.01),theta,2)
norm.seq1=dnorm(seq(-9,11,.01),1,2)
norm.seq2=dnorm(seq(-9,11,.01),2,2)
par(mfrow=c(1,2))
plot(seq(-9,11,.01), norm.seq1, type="l",xlim=c(-9,11))
plot(seq(-9,11,.01), norm.seq2, type="l",xlim=c(-9,11))
par(mfrow=c(2,1))
plot(seq(-9,11,.01), norm.seq1, type="l",xlim=c(-9,11))
plot(seq(-9,11,.01), norm.seq2, type="l",xlim=c(-9,11))
par(mfrow=c(2,1))
plot(seq(-9,11,.01), norm.seq1, type="l",xlim=c(-9,11),main='while theta=1')
plot(seq(-9,11,.01), norm.seq2, type="l",xlim=c(-9,11),main='while theta=2')
norm.x=seq(-7,9,.01)
norm.x=seq(-7,9,.01)
norm.seq1=dnorm(norm.x,1,2)
norm.seq2=dnorm(norm.x,2,2)
par(mfrow=c(2,1))
plot(norm.x, norm.seq1, type="l",xlim=c(-7,9),main='while theta=1')
plot(norm.x, norm.seq2, type="l",xlim=c(-7,9),main='while theta=2')
norm.t1=dnorm(norm.x,1,2)
norm.t2=dnorm(norm.x,2,2)
par(mfrow=c(1,1))
plot(norm.x, norm.t1*.5+norm.t2*.5, type="l",xlim=c(-7,9),main='while theta=1')
plot(norm.x, norm.t1*.5+norm.t2*.5, type="l",xlim=c(-7,9),main='PDF for y')
plot(norm.x, norm.t1*.5+norm.t2*.5, type="l",xlim=c(-7,9),main='P.D.F.for y')
plot(norm.x, norm.t1*.5+norm.t2*.5, type="l",xlim=c(-7,9),main='P.D.F. for y')
dnorm(9.9, 10, 0.2)
x=rnorm(10^5,10,0.2); summary(x)
x9.9=x[x<=10.0&x>=9.8]
p9.9=length(x9.9)/10^5
p9.9/(10-9.8)
norm.x=seq(-7,9,.01)
norm.t1=dnorm(norm.x,1,2)
norm.t2=dnorm(norm.x,2,2)
plot(norm.x, norm.t1*.5+norm.t2*.5, type="l",xlim=c(-7,9),main='P.D.F. for y')
install.packages('rvest')
library(rvest)
if(!file.exists("YahooStock.r")){
download.file("https://raw.githubusercontent.com/datasci-info/RCrawler101-201512/gh-pages/week1/YahooStock.r", destfile = "YahooStock.r")
}
source("YahooStock.r")
dat <- yahooStockMajor.getData(2330)
# View(dat)
View(dat)
if(!file.exists("TWSE.r")){
download.file("https://github.com/datasci-info/RCrawler101-201512/blob/gh-pages/week1/TWSE.r", destfile = "TWSE.r")
}
source("TWSE.r")
dat <- TWSE.postData()
View(dat)
dim(dat)
dat
head(dat)
View(dat)
get(wd)
getwd()
source("TWSE.r")
source("TWSE.r")
dat <- TWSE.postData()
source("TWSE.r")
?download.file
if(!file.exists("YahooStock.r")){
download.file("https://raw.githubusercontent.com/datasci-info/RCrawler101-201512/gh-pages/week1/YahooStock.r", destfile = "YahooStock.r")
}
source("YahooStock.r")
data(HouseVotes84, package = "mlbench")
model <- naiveBayes(Class ~ ., data = HouseVotes84)
data(HouseVotes84, package = "mlbench")
install.packages('mlbench')
data(HouseVotes84, package = "mlbench")
model <- naiveBayes(Class ~ ., data = HouseVotes84)
model <- naiveBayes(Class ~ ., data = HouseVotes84)
install.packages('e1071')
library(e1071)
model <- naiveBayes(Class ~ ., data = HouseVotes84)
predict(model, HouseVotes84[1:10,])
predict(model, HouseVotes84[1:10,], type = "raw")
model
library(e1071)
library(e1071)
data <- read.csv(file="YS.csv")
data
data <- read.csv(file="YS.csv", Encoding='BIG5')
data <- read.csv(file="YS.csv")
data <- read.table(file="YS.csv")
dim(data)
data
data <- read.csv(file="YS.csv")
data
data[1,]
data=read.csv("YS.csv",encoding='UTF-8')
head(data)
data=read.csv("YS.csv",encoding='BIG5')
head(data)
dim(data)
head(data)
str(data)
plot(rnorm(5), main = "测试中文一二三四壹貳參肆",
family = "__font name__")
plot(rnorm(5), main = "测试中文一二三四壹貳參肆", family = "Songti TC")
plot(rnorm(5), main = "测试中文一二三四壹貳參肆", family = "Songti TC")
plot(rnorm(5), main = "测试中文一二三四壹貳參肆", family = "__Songti TC__")
plot(rnorm(5), main = "测试中文一二三四壹貳參肆", family = "Songti TC")
warnings()
plot(rnorm(5), main = "测试中文一二三四壹貳參肆", family = "Wawati TC")
font=c(Baoli SC, FangSong, FangSong_GB2312, Hannotate SC, HanziPen SC, Hei, Kai, KaiTi, Lantinghei SC Demibold, Lantinghei SC Heavy, Libian SC, Microsoft YaHei, MingLiU_HKSC, PMingLiU, SimHei, SimSun, Songti SC, Songti TC, STFangsong, STHeiti, STHupo, STKaiti, STSong, Wawati SC, Wawati TC)
plot(rnorm(5), main = "测试中文一二三四壹貳參肆", family = "Hannotate SC")
plot(rnorm(5), main = "测试中文一二三四壹貳參肆", family = "KaiTi")
plot(rnorm(5), main = "测试中文一二三四壹貳參肆", family = "KaiTi")
plot(rnorm(5), main = "测试中文一二三四壹貳參肆", family = "KaiTi")
plot(rnorm(5), main = "测试中文一二三四壹貳參肆", family = "Lantinghei SC Demibold")
plot(rnorm(5), main = "测试中文一二三四壹貳參肆", family = "HanziPen TC Bold")
par(family="HanziPen TC Bold")
par(family="STKaiti")
data=read.csv("YS.csv",encoding='BIG5')
head(data)
data=read.csv("YS.csv",encoding='UTF-8')
head(data)
data=read.csv("YS.csv")
str(data)
par(family="STKaiti")
data=read.csv("YS.csv")
str(data)
head(data)
table=cor(data)
for (i in 1:ncol(data)){
data[,i]=as.numeric(data[,i])
}
head(data)
table=cor(data)
table
corrplot(table)
library(corrplot)
corrplot(table)
d <- data.frame(x=1:5,y=rnorm(5),label=c('一','二','三','四','五'))
d
d <- data.frame(x=1:5,y=rnorm(5),label=c('一','二','三','四','五'));d
par(family="STKaiti")
d <- data.frame(x=1:5,y=rnorm(5),label=c('一','二','三','四','五'));d
d <- data.frame(x=1:5,y=rnorm(5),label=c('一','二','三','四','五'));d
par(family="Kaiti")
d <- data.frame(x=1:5,y=rnorm(5),label=c('一','二','三','四','五'));d
locale
locale
data=read.csv("YS.csv",fileEncoding='UTF-8')
data=read.csv("YS.csv",fileEncoding='UTF-8')
setwd("~/Documents/R")
data=read.csv("YS.csv",fileEncoding='UTF-8')
str(data)
data <- read.csv(file="YS.csv")
data
View(data)
data <- read.csv(file="YS.csv", encoding='Big5')
View(data)
data[,1]
data=read.csv("YS.csv",fileEncoding='UTF-8')
data=read.csv("YS.csv",Encoding='UTF-8')
data=read.csv("YS.csv",encoding='UTF-8')
str(data)
View(data)
data=read.csv("YS.csv",encoding='Big5')
View(data)
str(data)
for (i in 1:ncol(data)){
data[,i]=as.numeric(data[,i])
}
i
table=cor(data)
table
pkgs = c("httr", "rvest", "DT", "rmarkdown", "XML", "whisker", "googleVis", "leaflet",
"jsonlite", "magrittr", "data.table", "RSQLite", "knitr", "stringr")
install.packages(pkgs)
y
library(rCharts)
p1 <- nPlot(mpg ~ wt, group = 'cyl', data = mtcars, type = 'scatterChart')
p1$xAxis(axisLabel = 'Weight (in lb)')
p1
h1 <- hPlot(x="wt",y="mpg",group="cyl",data=mtcars,type="scatter")
h1
h1 <- hPlot(x="wt",y="mpg",group="cyl",data=mtcars,type="scatter")
h1
options(viewer = TRUE)
p1 <- nPlot(mpg ~ wt, group = 'cyl', data = mtcars, type = 'scatterChart')
p1$xAxis(axisLabel = 'Weight (in lb)')
p1
p1 <- nPlot(mpg ~ wt, group = 'cyl', data = mtcars, type = 'scatterChart')
p1$xAxis(axisLabel = 'Weight (in lb)')
p1
options(viewer = NULL)
p1 <- nPlot(mpg ~ wt, group = 'cyl', data = mtcars, type = 'scatterChart')
p1$xAxis(axisLabel = 'Weight (in lb)')
p1
x <- c(0, 0.01, 0.5, 0.99, 1)
b <- c(0, 0, 1, 1)
.bincode(x, b, TRUE)
.bincode(x, b, FALSE)
.bincode(x, b, TRUE, TRUE)
.bincode(x, b, FALSE, TRUE)
x= c(1,2,3,4,5,6,7,8,9,10)
b= c(3,4,4,5)
.bincode(x, b, FALSE)
b=c(0,0,1)
.bincode(x, b, FALSE)
b=c(0,0,1,2,2)
.bincode(x, b, FALSE)
b=c(0,0,1,2)
.bincode(x, b, FALSE)
.bincode(c(1,2,3,4,5),c(0,0,0,0),TRUE)
x=1:10
x
b=c(3,6,9,15,21)
.bincode(x, b, FALSE)
g1
library(ggplot2)
library(magrittr)
n=10
x=sample(1:100, 2*n, replace=TRUE)
y=sample(1:100, 2*n, replace=TRUE)
data=data.frame(x=x, y=y, line=gl(n,2))
x.d=c()
y.d=c()
l.d=c()
for(i in 1:n){
for(j in 1:100){
for(k in 1:100){
if(
((((j-data[data$line==i,][1,1])^2)+ ((k-data[data$line==i,][1,2])^2) )%>%sqrt())+
((((j-data[data$line==i,][2,1])^2)+ ((k-data[data$line==i,][2,2])^2) )%>%sqrt())<
((((data[data$line==i,][2,1]-data[data$line==i,][1,1])^2)+ ((data[data$line==i,][2,2]-data[data$line==i,][1,2])^2) )%>%sqrt())+.3
){
x.d= c(x.d, j)
y.d= c(y.d, k)
l.d= c(l.d, i)
}
}
}
}
dotset=data.frame(x.d, y.d, l.d)
g1=ggplot(data=data, aes(x=x, y=y, color=line))+
geom_point()+
geom_line(aes(group=line))+
geom_point(data=dotset, aes(x=x.d, y=y.d, color=factor(l.d), alpha=.3))+
scale_x_continuous(limits=c(0,100))+scale_y_continuous(limits=c(0,100))
g1
g1=ggplot(data=data, aes(x=x, y=y, color=line))+
geom_point()+
geom_line(aes(group=line))+
geom_point(data=dotset, aes(x=x.d, y=y.d, color=factor(l.d), alpha=.05))+
scale_x_continuous(limits=c(0,100))+scale_y_continuous(limits=c(0,100))
g1
g1=ggplot(data=data, aes(x=x, y=y, color=line))+
geom_point()+
geom_line(aes(group=line))+
geom_point(data=dotset, aes(x=x.d, y=y.d, color=factor(l.d), fill=factor(l.d), alpha=.05))+
scale_x_continuous(limits=c(0,100))+scale_y_continuous(limits=c(0,100))
g1
ggplot(data=data, aes(x=x, y=y, color=line))+
geom_point()+
geom_line(aes(group=line))+
ggplot(data=data, aes(x=x, y=y, color=line))+
geom_point()+
geom_line(aes(group=line))+
scale_x_continuous(limits=c(0,100))+scale_y_continuous(limits=c(0,100))
ggplot(data=data, aes(x=x, y=y, color=line))+
geom_point()+
geom_line(aes(group=line))+
geom_point(data=dotset, aes(x=x.d, y=y.d, color=factor(l.d), fill=factor(l.d), alpha=.05))+
scale_x_continuous(limits=c(0,100))+scale_y_continuous(limits=c(0,100))
g2=ggplot(data=data, aes(x=x, y=y, color=line))+
geom_point()+
geom_line(aes(group=line))+
scale_x_continuous(limits=c(0,100))+scale_y_continuous(limits=c(0,100))
g1
g2
g1
g1
g2
multiplot(g1,g2)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
multiplot(g1,g2)
multiplot(g1,g2, cols=2)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
library(ggplot2)
library(magrittr)
data2=data.frame(x=c(3.4255, 3), y=c(6.50857, 7))
ggplot(data=data2, aes(x=x, y=y))+geom_point()
ggplot(data=data2, aes(x=x, y=y))+geom_point(aes(size=10))
data2
data2=data.frame(x=c(3.4255, 3), y=c(6.50857, 7))
ggplot(data=data2, aes(x=x, y=y))+geom_point(aes(size=10))+
scale_x_continuous(limits=c(0,10))+scale_y_continuous(limits=c(0,10))
data2=data.frame(x=c(3.4255, 3), y=c(6.50857, 7))
ggplot(data=data2, aes(x=x, y=y))+geom_point(aes(size=10))
data2=data.frame(x=c(3.4255, 3), y=c(6.50857, 7))
ggplot(data=data2, aes(x=x, y=y))+geom_point(aes(size=5))
data2=data.frame(x=c(3.4255, 3), y=c(6.50857, 7))
ggplot(data=data2, aes(x=x, y=y))+geom_point(aes())
data2=data.frame(x=sample(1:10000, 20, replace = TRUE)/1000, y=sample(1:10000, 20, replace = TRUE)/1000)
data2
data2%>%round()
rbind(data2,data2%>%round())
data2=data.frame(x=sample(1:10000, 20, replace = TRUE)/1000, y=sample(1:10000, 20, replace = TRUE)/1000)
data2=rbind(data2,data2%>%round())
data2
gl(2,20)
data2=rbind(data2,data2%>%round()) %>%
data.frame(., group=gl(2,40))
data2
ggplot(data=data2, aes(x=x, y=y, color=group))+geom_point(
ggplot(data=data2, aes(x=x, y=y, color=group))+geom_point()
ggplot(data=data2, aes(x=x, y=y, color=group))+geom_point()+
scale_x_continuous(limits=c(0,10))+scale_y_continuous(limits=c(0,10))
gl(2,2)
data2=data.frame(x=sample(1:10000, 20, replace = TRUE)/1000, y=sample(1:10000, 20, replace = TRUE)/1000)
data2
gl(2,2)
gl(2,1)
gl(2,1)%>%rep(20)
data2=data.frame(x=sample(1:10000, 20, replace = TRUE)/1000, y=sample(1:10000, 20, replace = TRUE)/1000)
data2=rbind(data2,data2%>%round()) %>%
data.frame(., group=gl(2,20), line=gl(2,1)%>%rep(20))
ggplot(data=data2, aes(x=x, y=y, color=group))+geom_point()+geom_line(aes(line=line))
data2
gl(20,1)
data2=data.frame(x=sample(1:10000, 20, replace = TRUE)/1000, y=sample(1:10000, 20, replace = TRUE)/1000)
data2=rbind(data2,data2%>%round()) %>%
data.frame(., group=gl(2,20), line=gl(20,1)%>%rep(2))
ggplot(data=data2, aes(x=x, y=y, color=group))+geom_point()+geom_line(aes(line=line))
ggplot(data=data2, aes(x=x, y=y, color=group))+geom_point()+geom_line(aes(group=line))
ggplot(data=data2, aes(x=x, y=y, color=group))+geom_point()+geom_line(aes(group=line, colour='black'))
ggplot(data=data2, aes(x=x, y=y, color=group))+geom_point()+geom_line(aes(group=line, colour='Black'))
data2=data.frame(x=(1:10000)/1000, y=(1:10000)/1000)
data2=data.frame(x=(1:10000)/1000, y=(1:10000)/1000)
data2=rbind(data2,data2%>%round()) %>%
data.frame(., group=gl(2,10000), line=gl(10000,1)%>%rep(2))
table(data2)
summary(data2)
head(data2)
library(ggplot2)
java= c(503.624, 521.172, 519.080, 513.529, 471.783)
r= c(507.037, 458.652, 469.784, 530.401, 537.966)
gl(2, 5)
data= data.frame(speed=c(java, r), cat= gl(2, 5))
data
data= data.frame(speed=c(java, r), cat= gl(2, 5, labels=c("Java", "R")))
data
ggplot(data, aes(x=cat, y=speed))+geom_boxplot()
ggplot(data, aes(x=cat, y=speed))+geom_point()
boxplot
ggplot(data, aes(x=cat, y=speed))+geom_boxplot()
ggplot(data, aes(x=cat, y=speed, colour= cat))+geom_boxplot()
ggplot(data, aes(x=cat, y=speed, fill= cat))+geom_boxplot()
setwd("/Users/Poissonfish/git/iPat")
readLines("FarmCPU.R")
data <- readLines(file)
data <- readLines(paste0(wd, '/',file)
data <- readLines(paste0(wd, '/',file))
data <- readLines(paste0(wd, '/',file))
wd <- "/Users/Poissonfish/git/iPat"
file <- "FarmCPU.R"
setwd(wd)
data <- readLines(paste0(wd, '/',file))
data
data[7]
library(magrittr)
data[7]%>%gsub("\"","\'")
data[7]%>%gsub("\"","\'", .)
data[7] %>% gsub("\"","\'", .) %>% paste0("r.eval(\"",.,"\");")
data[7] %>% gsub("\"","\'", .) %>% paste0('r.eval("',.,'");'')
data[7] %>% gsub("\"","\'", .) %>% paste0('r.eval("',.,'");'')
data[7] %>% gsub("\"","\'", .) %>% paste0('r.eval("',.,'");')
data[7] %>% gsub("\"","\'", .)
data[7] %>% gsub("\"","\'", .) %>% paste0('r.eval("',.,'");')
data[7] %>% gsub("\"","\'", .) %>% paste0("r.eval(\"",.,"\");")
data[7] %>% gsub("\"","\'", .) %>% paste("r.eval(\"",.,"\");", sep="")
data[7] %>% gsub("\"","\'", .) %>% paste("r.eval(",.,");", sep='"')
length(data)
wd <- "/Users/Poissonfish/git/iPat"
file <- "FarmCPU.R"
library(magrittr)
setwd(wd)
data <- readLines(paste0(wd, '/',file))
for (i in 1:length(data))
{
data[i] %>% gsub("\"","\'", .) %>% paste("r.eval(",.,");", sep='"')
writeLines(paste0(wd,'/J_',file), sep= "\n")
}
wd <- "/Users/Poissonfish/git/iPat"
file <- "FarmCPU.R"
library(magrittr)
setwd(wd)
data <- readLines(paste0(wd, '/',file))
for (i in 1:length(data))
{
writeLines(data[i] %>% gsub("\"","\'", .) %>% paste("r.eval(",.,");", sep='"'),
paste0(wd,'/J_',file),
sep= "\n")
}
wd <- "/Users/Poissonfish/git/iPat"
file <- "FarmCPU.R"
library(magrittr)
setwd(wd)
data <- readLines(paste0(wd, '/',file))
for (i in 1:length(data))
{
writeLines(data[i] %>% gsub("\"","\'", .) %>% paste("r.eval(",.,");", sep='"'),
paste0(wd,'/J_',file),
sep= "\n", append = TRUE)
}
wd <- "/Users/Poissonfish/git/iPat"
file <- "FarmCPU.R"
library(magrittr)
setwd(wd)
data <- readLines(paste0(wd, '/',file))
for (i in 1:length(data))
{
write(data[i] %>% gsub("\"","\'", .) %>% paste("r.eval(",.,");", sep='"'),
paste0(wd,'/J_',file),
sep= "\n", append = TRUE)
}
